name: Check tool updates

on:
  push:
    branches:
      - main
  workflow_dispatch:
  # Schedule the workflow to run every Monday at 00:00 UTC
  schedule:
    - cron: '0 0 * * MON'

jobs:
  check-updates:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up git identity to commit changes
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Check and update tool versions
      - name: Update Terraform Tools Versions
        id: update_versions
        run: |
          # Fetch the latest versions using curl and jq
          TERRAFORM_VERSION=$(curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | jq -r .tag_name | sed 's/^v//')
          TERRAGRUNT_VERSION=$(curl -s https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest | jq -r .tag_name | sed 's/^v//')
          CHECKOV_VERSION=$(curl -s https://api.github.com/repos/bridgecrewio/checkov/releases/latest | jq -r .tag_name | sed 's/^v//')
          TFDOCS_VERSION=$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | jq -r .tag_name | sed 's/^v//')
          TFLINT_VERSION=$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | jq -r .tag_name | sed 's/^v//')
          TFSEC_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | jq -r .tag_name | sed 's/^v//')

          # Fetch changelogs for the latest releases
          TERRAFORM_CHANGELOG=$(curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | jq -r .body)
          TERRAGRUNT_CHANGELOG=$(curl -s https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest | jq -r .body)
          CHECKOV_CHANGELOG=$(curl -s https://api.github.com/repos/bridgecrewio/checkov/releases/latest | jq -r .body)
          TFDOCS_CHANGELOG=$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | jq -r .body)
          TFLINT_CHANGELOG=$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | jq -r .body)
          TFSEC_CHANGELOG=$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | jq -r .body)

          # Store changelogs as output
          echo "TERRAFORM_CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$TERRAFORM_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "TERRAGRUNT_CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$TERRAGRUNT_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "CHECKOV_CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHECKOV_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "TFDOCS_CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$TFDOCS_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "TFLINT_CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$TFLINT_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "TFSEC_CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$TFSEC_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          # Update the Dockerfile with the latest versions
          sed -i "s/^ARG TERRAFORM_VERSION=.*/ARG TERRAFORM_VERSION=${TERRAFORM_VERSION}/" Dockerfile
          sed -i "s/^ARG TERRAGRUNT_VERSION=.*/ARG TERRAGRUNT_VERSION=${TERRAGRUNT_VERSION}/" Dockerfile
          sed -i "s/^ARG CHECKOV_VERSION=.*/ARG CHECKOV_VERSION=${CHECKOV_VERSION}/" Dockerfile
          sed -i "s/^ARG TFDOCS_VERSION=.*/ARG TFDOCS_VERSION=${TFDOCS_VERSION}/" Dockerfile
          sed -i "s/^ARG TFLINT_VERSION=.*/ARG TFLINT_VERSION=${TFLINT_VERSION}/" Dockerfile
          sed -i "s/^ARG TFSEC_VERSION=.*/ARG TFSEC_VERSION=${TFSEC_VERSION}/" Dockerfile

      - name: Check for changes
        id: check_changes
        run: |
          git diff --exit-code || echo "Changes detected"
          echo "changes=$(if git diff --quiet; then echo 'false'; else echo 'true'; fi)" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: 'chore: Update tool versions'
          title: 'chore: Update tool versions'
          branch: update-tool-versions
          body: |
            Updated tool versions:

            - **Terraform**: ${{ env.TERRAFORM_VERSION }}
              Changelog:
              ```markdown
              ${{ env.TERRAFORM_CHANGELOG }}
              ```

            - **Terragrunt**: ${{ env.TERRAGRUNT_VERSION }}
              Changelog:
              ```markdown
              ${{ env.TERRAGRUNT_CHANGELOG }}
              ```

            - **Checkov**: ${{ env.CHECKOV_VERSION }}
              Changelog:
              ```markdown
              ${{ env.CHECKOV_CHANGELOG }}
              ```

            - **Terraform Docs**: ${{ env.TFDOCS_VERSION }}
              Changelog:
              ```markdown
              ${{ env.TFDOCS_CHANGELOG }}
              ```

            - **TFLint**: ${{ env.TFLINT_VERSION }}
              Changelog:
              ```markdown
              ${{ env.TFLINT_CHANGELOG }}
              ```

            - **TFSec**: ${{ env.TFSEC_VERSION }}
              Changelog:
              ```markdown
              ${{ env.TFSEC_CHANGELOG }}
              ```
